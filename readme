<개요>
1. 어플리케이션 명 : member-crud application.
2. 작성자 : 이지수
3. 작성일 : 2013.06.21

<소개>
이것은 데이터베이스와 연동되는 심플한 CRUD 어플리케이션입니다. 
멤버 테이블에 있는 회원들을 검색(전체, id), 수정, 삭제 할 수 있습니다.
iBatis/MyBatis를 활용법을 공부하기 위해서 만들어보았습니다. 
참고 : http://loianegroner.com/2011/02/getting-started-with-ibatis-mybatis-xml-configuration/

<작업 환경>
Eclipse IDE - Java project
MySQL

<테스트 순서 및 방법>

1. 이클립스에 프로젝트를 import 하십시오.
- mysql, mybatis, junit jar 파일이 lib 폴더에 포함되어 있습니다. 

2. sql 폴더에 있는 script.sql로 테이블을 만드십시오. 
- SCHEMA는 'note'이고 TABLE은 'member'입니다. 
- column은 `MEMBER_ID`, `MEMBER_EMAIL`, `MEMBER_NAME`, `MEMBER_PHONE`입니다.

3. mysql에 SCHEMA 'note'가 잘 만들어졌는지 connect 여부를 확인하십시오.
- con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "1234");
-> '1234' 부분을 본인 데이터베이스의 비밀번호로 변경하십시오.
- test 패키지에 jdbcTest,java를 run하셔서 'note'가 출력되면 성공입니다. 

4. SqlMapConfig.xml의 파일에서 비밀번호를 변경해주십시오. 
- <property name="password" value="1234"/> -> '1234' 값 변경

5. 메인 test는 test 패키지에 'TestMember.java'를 run하시면 됩니다.
** 참고 : Junit를 이용한 테스트 방법 사용 ** 
- assertXXX() 메서드가 익숙하지 않을 수 있는 분들을 위해서 간략히 정리하면(제가 아는 정도로..),  
단위 메서드가 에러 없이 성공하기 위해서는 assertEquals(actual, expected); 메서드를 만족시켜야 합니다.  
즉, actual(테이블에서 실제 존재하는 instance)와 expected(memberDAO와 연결하여 실제 작업한 instance)가 같아야 합니다.
 
6. 'TestMember.java'를 run해서 JUnit에 Error와 Failures가 '0'이면 각 메서드의 매개변수를 바뀌가며 테스트해보십시오. 